/*
 * Original Build script derived from Sponge
 * Please visit www.github.com/spongepoweder/sponge for the script
 * Sponge is licensed under (MIT)
 *
 * Some parts of this file are derived from the sponge project.
 *
 * Copyright (c) SpongePowered.org <http://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */


// Gradle repositories and dependencies
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'sonatype-nexus-public'
            url = 'https://oss.sonatype.org/content/repositories/releases/'
        }
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

// Default tasks
defaultTasks 'build', 'licenseFormat'

// Apply plugin
apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'idea'

version = "1.0"
group= "tk.coaster3000" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "WorldInfo-Common"

dependencies {
    testCompile 'org.testng:testng:6.1.1'
}

// Define variables
ext.buildNumber = project.hasProperty("buildNumber") ? buildNumber : '0'
ext.ciSystem = project.hasProperty("ciSystem") ? ciSystem : 'unknown'
ext.commit = project.hasProperty("commit") ? commit : 'unknown'

// Minimum version of Java required
sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories { mavenLocal() }

processResources {
    inputs.property "version", version

    // Include in final JAR
    from 'LICENSE.txt'
}

test {
    useTestNG()
}

jar {
    // JAR manifest configuration
    manifest.mainAttributes(
            "Built-By": System.properties['user.name'],
            "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
            "Implementation-Title": name,
            "Implementation-Version": version + "+" + ciSystem + "-b" + buildNumber + ".git-" + commit,
            "Implementation-Vendor": url)
}

// License header formatting
license {
    ext.name = project.name
    ext.organization = project.developer
    ext.url = project.url
    ext.year = project.inceptionYear
    exclude "**/*.info"
    exclude "**/*.json"
    exclude "assets/**"
    header new File(getProjectDir(), "HEADER.txt")
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
}

checkstyle {
    toolVersion = "6.0"
    configProperties = [
            "name" : project.name,
            "organization" : project.developer,
            "url" : project.url,
            "year" : project.inceptionYear
    ]
    configFile = new File(getProjectDir(),"checkstyle.xml")
}
tasks.jar.dependsOn "check"

// Source compiler configuration
tasks.withType(JavaCompile) {
    options.compilerArgs += [ '-Xlint:all', '-Xlint:-path' ]
    options.deprecation = true
    options.encoding = 'utf8'
}